USE etaireia_aksiologisis;


CREATE TABLE IF NOT EXISTS administrator_log(
administrator VARCHAR(30) NOT NULL,
excecution_time DATETIME DEFAULT '2024-01-01 00:00:00',
event_type TEXT NOT NULL,  // ή VARCHAR(150)?
PRIMARY KEY (event_type)
); 



DELIMITER $
DROP TRIGGER IF EXISTS job_insert$
CREATE TRIGGER job_insert AFTER INSERT ON job
FOR EACH ROW 
BEGIN 
DECLARE job_id INT(11);
SELECT MAX(job.id) INTO job_id FROM job;
DECLARE current_datetime DATETIME ;
DECLARE event TEXT;
SET current_datetime = NOW();
SET event = CONCAT('The job with id ', job_id, ' has just been inserted by the administrator ',NEW.active_admin.username);
INSERT INTO administrator_log VALUES (NEW.active_admin.username, current_datetime, event);
END$
DELIMITER;


DELIMITER $
DROP TRIGGER IF EXISTS job_delete$
CREATE TRIGGER job_delete AFTER DELETE ON job
FOR EACH ROW 
BEGIN 
DECLARE job_id INT(11);
SELECT OLD.job.id INTO job_id FROM job;
DECLARE current_datetime DATETIME ;
SET current_datetime = NOW();
DECLARE event TEXT;
SET event = CONCAT('The job with id ', job_id, ' has just been deleted by the administrator ',NEW.active_admin.username);
INSERT INTO administrator_log VALUES (NEW.active_admin.username, current_datetime, event);   //χρησιμοποιείται το ψευδώνημο NEW γιατί δεν με ενδιαφέρει κάποια τίμη που διαγράφεται  
END$
DELIMITER;

DELIMITER $
DROP TRIGGER IF EXISTS job_update$
CREATE TRIGGER job_update AFTER UPDATE ON job
FOR EACH ROW 
BEGIN 
DECLARE job_id INT(11);
SELECT NEW.job.id INTO job_id FROM job;
DECLARE current_datetime DATETIME ;
SET current_datetime = NOW();
DECLARE event TEXT;
SET event = CONCAT('The job with id ', job_id, ' has just been updated by the administrator ',NEW.active_admin.username);
INSERT INTO administrator_log VALUES (NEW.active_admin.username, current_datetime, event);
END$
DELIMITER;


DELIMITER $
DROP TRIGGER IF EXISTS degree_insert$
CREATE TRIGGER degree_insert AFTER INSERT ON degree
FOR EACH ROW 
BEGIN 
DECLARE d_titlos VARCHAR(150);
DECLARE d_idryma VARCHAR (140);
SELECT NEW.titlos, NEW.idryma INTO d_titlos, d_idryma FROM degree;
DECLARE event TEXT;
SET event = CONCAT('The degree with title ', d_titlos, 'and idryma ', d_idryma, ' has just been inserted by the administrator ',NEW.active_admin.username);
INSERT INTO administrator_log VALUES (NEW.active_admin.username, NOW(), event);
END$
DELIMITER;

DELIMITER $
DROP TRIGGER IF EXISTS degree_update$
CREATE TRIGGER degree_update AFTER UPDATE ON degree
FOR EACH ROW 
BEGIN 
DECLARE d_titlos VARCHAR(150);
DECLARE d_idryma VARCHAR (140);
SELECT NEW.titlos, NEW.idryma INTO d_titlos, d_idryma FROM degree;
DECLARE event TEXT;
SET event = CONCAT('The degree with title ', d_titlos, 'and idryma ', d_idryma, ' has just been updated by the administrator ',NEW.active_admin.username);
INSERT INTO administrator_log VALUES ( NEW.active_admin.username, NOW(), event);
END$
DELIMITER;

DELIMITER $
DROP TRIGGER IF EXISTS degree_delete$
CREATE TRIGGER degree_delete AFTER DELETE ON degree
FOR EACH ROW 
BEGIN 
DECLARE d_titlos VARCHAR(150);
DECLARE d_idryma VARCHAR (140);
SELECT OLD.titlos, OLD.idryma INTO d_titlos, d_idryma FROM degree;
DECLARE event TEXT;
SET event = CONCAT('The degree with title ', d_titlos, 'and idryma ', d_idryma, ' has just been deleted by the administrator ',NEW.active_admin.username);
INSERT INTO administrator_log VALUES ( NEW.active_admin.username, NOW(), event);
END$
DELIMITER;

DELIMITER $
DROP TRIGGER IF EXISTS user_insert$
CREATE TRIGGER user_insert AFTER INSERT ON user 
FOR EACH ROW 
BEGIN 
DECLARE t_username VARCHAR(30);
SELECT NEW.username INTO t_username FROM user;
DECLARE event TEXT;
SET event = CONCAT('The user with username ', t_username, ' has just been inserted by the administrator ',NEW.active_admin.username);
INSERT INTO administrator_log VALUES (NEW.active_admin.username, NOW(), event);
END$
DELIMITER;

DELIMITER $
DROP TRIGGER IF EXISTS user_update$
CREATE TRIGGER user_update AFTER UPDATE ON user 
FOR EACH ROW 
BEGIN 
DECLARE t_username VARCHAR(30);
SELECT NEW.username INTO t_username FROM user;
DECLARE event TEXT;
SET event = CONCAT('The user with username ', t_username, ' has just been updated by the administrator ',NEW.active_admin.username);
INSERT INTO administrator_log VALUES (NEW.active_admin.username, NOW(), event);
END$
DELIMITER;

DELIMITER $
DROP TRIGGER IF EXISTS user_delete$
CREATE TRIGGER user_delete AFTER DELETE ON user 
FOR EACH ROW 
BEGIN
DECLARE t_username VARCHAR(30);
SELECT OLD.username INTO t_username FROM user; 
DECLARE event TEXT;
SET event = CONCAT('The user with username ', t_username, ' has just been deleted by the administrator ',NEW.active_admin.username);
INSERT INTO administrator_log VALUES (NEW.active_admin.username, NOW(), event);
END$
DELIMITER;
